info:
  contact:
    name: Indico Team
    url: https://github.com/indico/openreferee
    email: indico-team@cern.ch
  title: OpenReferee
  version: 0.0.1
servers: []
tags:
- name: create
- name: event
- name: get
- name: info
- name: remove
- name: service
paths:
  /info:
    get:
      description: Get service info
      operationId: getServiceInfo
      tags:
      - service
      - information
      responses:
        '200':
          description: Service Info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfo'
  /event/{identifier}:
    put:
      description: Create an Event
      operationId: createEvent
      tags:
      - event
      - create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      parameters:
      - in: path
        name: identifier
        required: true
        description: The unique ID which represents the event
        schema:
          type: string
      responses:
        '201':
          description: Event Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
    delete:
      description: Remove an Event
      operationId: removeEvent
      tags:
      - event
      - remove
      security:
      - bearer_token: []
      parameters:
      - in: path
        name: identifier
        required: true
        description: The unique ID which represents the event
        schema:
          type: string
      responses:
        '204':
          description: Event Removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
    get:
      description: Get information about an event
      operationId: getEvent
      tags:
      - event
      - get
      security:
      - bearer_token: []
      parameters:
      - in: path
        name: identifier
        required: true
        description: The unique ID which represents the event
        schema:
          type: string
      responses:
        '200':
          description: Event Info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventInfo'
  /event/{identifier}/editable/{editable_type}/{contrib_id}:
    put:
      description: Called when a new editable is created
      operationId: createEditable
      tags:
      - editable
      - create
      security:
      - bearer_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEditable'
      parameters:
      - in: path
        name: identifier
        required: true
        description: The unique ID which represents the event
        schema:
          type: string
      - in: path
        name: contrib_id
        required: true
        description: The unique ID which represents the contribution
        schema:
          type: integer
      - in: path
        name: editable_type
        required: true
        description: The name which represents the editable type
        schema:
          type: string
      responses:
        '200':
          description: Editable processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEditableResponse'
  /event/{identifier}/editable/{editable_type}/{contrib_id}/{revision_id}:
    post:
      description: Called when a new editable is revised
      operationId: reviewEditable
      tags:
      - editable
      - review
      security:
      - bearer_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewEditable'
      parameters:
      - in: path
        name: identifier
        required: true
        description: The unique ID which represents the event
        schema:
          type: string
      - in: path
        name: contrib_id
        required: true
        description: The unique ID which represents the contribution
        schema:
          type: integer
      - in: path
        name: editable_type
        required: true
        description: The name which represents the editable type
        schema:
          type: string
      - in: path
        name: revision_id
        required: true
        description: The unique ID which represents the revision
        schema:
          type: string
      responses:
        '200':
          description: Review processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'
  /event/{identifier}/editable/{editable_type}/{contrib_id}/{revision_id}/actions:
    post:
      description: Called when the timeline is accessed by an editor or submitter
      operationId: getCustomRevisionActions
      tags:
      - editable
      - review
      security:
      - bearer_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceActionsRequest'
      parameters:
      - in: path
        name: identifier
        required: true
        description: The unique ID which represents the event
        schema:
          type: string
      - in: path
        name: contrib_id
        required: true
        description: The unique ID which represents the contribution
        schema:
          type: integer
      - in: path
        name: editable_type
        required: true
        description: The name which represents the editable type
        schema:
          type: string
      - in: path
        name: revision_id
        required: true
        description: The unique ID which represents the revision
        schema:
          type: string
      responses:
        '200':
          description: List of available actions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceAction'
  /event/{identifier}/editable/{editable_type}/{contrib_id}/{revision_id}/action:
    post:
      description: Called when a user clicks a custom action button
      operationId: triggerCustomRevisionAction
      tags:
      - editable
      - review
      security:
      - bearer_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTriggerActionRequest'
      parameters:
      - in: path
        name: identifier
        required: true
        description: The unique ID which represents the event
        schema:
          type: string
      - in: path
        name: contrib_id
        required: true
        description: The unique ID which represents the contribution
        schema:
          type: integer
      - in: path
        name: editable_type
        required: true
        description: The name which represents the editable type
        schema:
          type: string
      - in: path
        name: revision_id
        required: true
        description: The unique ID which represents the revision
        schema:
          type: string
      responses:
        '200':
          description: List of available actions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceActionResult'
openapi: 3.0.2
components:
  schemas:
    ServiceInfo:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
      required:
      - name
      - version
    ListEndpoint:
      type: object
      properties:
        list:
          type: string
        create:
          type: string
      required:
      - create
      - list
    EventEndpoints:
      type: object
      properties:
        editable_types:
          type: string
        file_types:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ListEndpoint'
        tags:
          $ref: '#/components/schemas/ListEndpoint'
      required:
      - editable_types
      - file_types
    Event:
      type: object
      properties:
        url:
          type: string
          format: url
        title:
          type: string
        token:
          type: string
        endpoints:
          $ref: '#/components/schemas/EventEndpoints'
      required:
      - endpoints
      - title
      - token
      - url
    Success:
      type: object
      properties:
        success:
          type: boolean
      required:
      - success
    EventInfoService:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
    EventInfo:
      type: object
      properties:
        url:
          type: string
          format: url
        title:
          type: string
        can_disconnect:
          type: boolean
        service:
          $ref: '#/components/schemas/EventInfoService'
      required:
      - can_disconnect
      - service
      - title
      - url
    EditingUser:
      type: object
      properties:
        avatar_url:
          type: string
        full_name:
          type: string
        id:
          type: integer
        identifier:
          type: string
      required:
      - full_name
      - id
      - identifier
    Editable:
      type: object
      properties:
        state:
          type: string
        type:
          type: string
        editor:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EditingUser'
        id:
          type: integer
        timeline_url:
          type: string
        revision_count:
          type: integer
      required:
      - id
      - state
    Role:
      type: object
      properties:
        source:
          type: string
          enum:
          - event
          - category
        code:
          type: string
        name:
          type: string
    User:
      type: object
      properties:
        submitter:
          type: boolean
        full_name:
          type: string
        editor:
          type: boolean
        id:
          type: integer
        manager:
          type: boolean
        email:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
      required:
      - editor
      - email
      - full_name
      - id
      - manager
      - roles
      - submitter
    RevisionType:
      type: object
      properties:
        title:
          type: string
          nullable: true
        name:
          type: string
        css_class:
          type: string
          nullable: true
      required:
      - name
    SignedFile:
      type: object
      properties:
        filename:
          type: string
        uuid:
          type: string
        file_type:
          type: integer
        signed_download_url:
          type: string
        content_type:
          type: string
      required:
      - file_type
      - filename
      - signed_download_url
      - uuid
    Tag:
      type: object
      properties:
        is_used_in_revision:
          type: boolean
        code:
          type: string
        id:
          type: integer
        color:
          type: string
        url:
          type: string
        title:
          type: string
        verbose_title:
          type: string
        system:
          type: boolean
      required:
      - code
      - id
      - title
    Revision:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RevisionType'
        files:
          type: array
          items:
            $ref: '#/components/schemas/SignedFile'
        comment:
          type: string
        user:
          $ref: '#/components/schemas/EditingUser'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
      - comment
      - user
    Generated:
      type: object
      properties:
        undo:
          type: string
        replace:
          type: string
        reset:
          type: string
        details:
          type: string
      required:
      - details
      - replace
      - reset
      - undo
    EditableEndpoints:
      type: object
      properties:
        file_upload:
          type: string
        revisions:
          $ref: '#/components/schemas/Generated'
      required:
      - file_upload
    CreateEditable:
      type: object
      properties:
        editable:
          $ref: '#/components/schemas/Editable'
        user:
          $ref: '#/components/schemas/User'
        revision:
          $ref: '#/components/schemas/Revision'
        endpoints:
          $ref: '#/components/schemas/EditableEndpoints'
      required:
      - editable
      - endpoints
      - revision
      - user
    CreateEditableResponse:
      type: object
      properties:
        ready_for_review:
          type: boolean
          default: false
    TransientRevision:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RevisionType'
        files:
          type: array
          items:
            $ref: '#/components/schemas/SignedFile'
        comment:
          type: string
        user:
          $ref: '#/components/schemas/EditingUser'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
      - comment
      - user
    ReviewEditable:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        revision:
          $ref: '#/components/schemas/TransientRevision'
        action:
          type: string
        endpoints:
          $ref: '#/components/schemas/EditableEndpoints'
      required:
      - action
      - endpoints
      - revision
      - user
    Comment:
      type: object
      properties:
        text:
          type: string
        internal:
          type: boolean
    ReviewResponse:
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        comment:
          type: string
        publish:
          type: boolean
        tags:
          type: array
          items:
            type: integer
    ServiceActionsRequest:
      type: object
      properties:
        revision:
          $ref: '#/components/schemas/Revision'
        user:
          $ref: '#/components/schemas/User'
      required:
      - revision
      - user
    ServiceAction:
      type: object
      properties:
        confirm:
          type: string
          default: null
          nullable: true
        name:
          type: string
        icon:
          type: string
          default: null
          nullable: true
        color:
          type: string
          default: null
          nullable: true
        title:
          type: string
      required:
      - name
      - title
    ServiceTriggerActionRequest:
      type: object
      properties:
        endpoints:
          $ref: '#/components/schemas/EditableEndpoints'
        revision:
          $ref: '#/components/schemas/Revision'
        action:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
      - action
      - endpoints
      - revision
      - user
    ServiceActionResult:
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        redirect:
          type: string
          default: null
          nullable: true
        publish:
          type: boolean
          default: null
          nullable: true
        tags:
          type: array
          items:
            type: integer
  securitySchemes:
    bearer_token:
      type: http
      scheme: bearer
